{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wang Hao\\\\Desktop\\\\react-ace\\\\src\\\\arduino-code.jsx\";\nimport bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ArduinoCodeComponent from '../../components/arduino/arduino-code/arduino-code.jsx';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { setHoveredCode } from \"../../reducers/hoveredCode\";\nimport { ExtensionLanguageState, ExtensionBoardState, BoardMicrobit, LanguageCpp, LanguageMicropython } from \"../../reducers/board-and-language-state\";\nimport VM from 'scratch-vm';\nimport VMScratchBlocks from '../../lib/arduino-blocks.js';\nimport Blockly from 'arduino-blocks';\nimport { setArduinoWriteCode as _setArduinoWriteCode } from \"../../reducers/arduinoTab-code\";\nimport { setAceCodeStyle as _setAceCodeStyle } from \"../../reducers/arduino-ace-style\";\nimport { toAddCode, lengthChange } from '../../reducers/drag-code';\nimport { codeAceFontNumber } from '../../reducers/arduino-size';\nimport regNumber from '../../lib/regNumber.js';\nimport Arduino from '../../lib/block-generator/Arduino/index';\nimport MicroPython from '../../lib/block-generator/MicroPython/index';\nimport cppPrompt from '../../lib/write-prompt/cpp-code';\nimport microPythonPrompt from '../../lib/write-prompt/micropython-code';\nimport tools from 'brace/ext/language_tools';\nimport dfrobotAlert from '../../lib/custom-dialog/custom-dialog';\nimport maxResetCode from '../../lib/maxResetCode';\n\nvar ArduinoCode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArduinoCode, _React$Component);\n\n  function ArduinoCode(props) {\n    var _this;\n\n    _classCallCheck(this, ArduinoCode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArduinoCode).call(this, props));\n    bindAll(_assertThisInitialized(_assertThisInitialized(_this)), ['handleMouseEnter', 'handleMouseLeave', 'handleBlockDragEnd', 'handleChangeCode', 'handleCopyCode', 'handleCutCode', 'handlePasteCode', 'handleSelectAllCode', 'handleRedoCode', 'handleUndoCode', 'codeRef', 'handleChangeTheme', 'handleMouseMove', 'handleChangeCodePrompt', 'handleClearCache', 'handleScrollMouse', 'handleMaxReset']);\n    _this.x = 0;\n    _this.y = 0;\n    _this.hoveredCode = false;\n    _this.oldLanguage = '';\n    return _this;\n  }\n\n  _createClass(ArduinoCode, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.vm.addListener('BLOCK_DRAG_END', this.handleBlockDragEnd);\n      document.addEventListener('mousemove', this.handleMouseMove);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.cRef.editor.completers) {\n        this.cRef.editor.completers.splice(3, 1);\n      }\n\n      this.props.vm.removeListener('BLOCK_DRAG_END', this.handleBlockDragEnd);\n      document.removeEventListener('mousemove', this.handleMouseMove);\n    }\n  }, {\n    key: \"handleScrollMouse\",\n    value: function handleScrollMouse(e) {\n      if (e.wheelDelta && e.ctrlKey) {\n        //IE/Opera/Chrome\n        if (e.wheelDelta === 120) {\n          this.props.setFontNumber(this.props.fontNumber + 1);\n        } else if (e.wheelDelta === -120) {\n          this.props.setFontNumber(this.props.fontNumber - 1);\n        }\n      }\n    }\n  }, {\n    key: \"handleChangeCodePrompt\",\n    value: function handleChangeCodePrompt(language) {\n      if (!this.props.isWrite || this.oldLanguage === language) return;\n\n      try {\n        if (this.props.language === LanguageMicropython) {\n          if (this.cRef && this.cRef.editor.completers) {\n            console.log(this.cRef.editor.completers);\n\n            if (this.cRef.editor.completers.length === 3) {\n              tools.addCompleter(microPythonPrompt);\n            } else {\n              var num = this.cRef.editor.completers.length - 3;\n              this.cRef.editor.completers.splice(3, num, microPythonPrompt);\n            }\n          } else {\n            tools.addCompleter(microPythonPrompt);\n          }\n        } else {\n          if (this.cRef && this.cRef.editor.completers) {\n            console.log(this.cRef.editor.completers);\n\n            if (this.cRef.editor.completers.length === 3) {\n              tools.addCompleter(cppPrompt);\n            } else {\n              var _num = this.cRef.editor.completers.length - 3;\n\n              this.cRef.editor.completers.splice(3, _num, cppPrompt);\n            }\n          } else {\n            tools.addCompleter(cppPrompt);\n          }\n        }\n\n        this.oldLanguage = language;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(e) {\n      //加上preventDefault会导致不能拖动选中文字\n      // e.preventDefault();\n      this.x = e.pageX; // 预料之外的偏差，减去60px,有bug,无法显示在最下面\n\n      this.y = e.pageY - 60;\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter() {\n      this.props.dispatchSetHoveredCode(true);\n      this.hoveredCode = true;\n      document.addEventListener('mousewheel', this.handleScrollMouse, false);\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave() {\n      this.props.dispatchSetHoveredCode(false);\n      this.hoveredCode = false;\n      document.removeEventListener('mousewheel', this.handleScrollMouse);\n    }\n  }, {\n    key: \"handleChangeCode\",\n    value: function handleChangeCode(code) {\n      this.props.setArduinoWriteCode(code, false);\n      localStorage.setItem('writeCode', code);\n    }\n  }, {\n    key: \"handleBlockDragEnd\",\n    value: function handleBlockDragEnd(blocks) {\n      // 创建管理blocks的类\n      if (this.props.isWrite) {\n        var newBlocksManage = this.props.vm.runtime._getANewBlocks();\n\n        for (var i = 0; i < blocks.length; i++) {\n          // 将blocks添加到类中\n          newBlocksManage.createBlock(blocks[i]);\n        } // 获取blocks的首项\n\n\n        var topId = newBlocksManage.getTopLevelScript(blocks[0].id); // 获取blocks的xml\n\n        var xml = newBlocksManage.blockToXML(topId);\n        xml = '<xml xmlns=\"http://www.w3.org/1999/xhtml \">' + xml + '</xml>'; // xml包装成dom\n\n        var dom = Blockly.Xml.textToDom(xml); // console.log('dom------:',xml,dom);\n        // 创建div用于放置workspace\n\n        var codeInjectDiv = document.createElement('div'); // console.log('cideUbhectDuv',codeInjectDiv);\n\n        codeInjectDiv.setAttribute('id', 'codeInjectDiv');\n        codeInjectDiv.style.display = 'none';\n        document.body.appendChild(codeInjectDiv);\n        var workspace = VMScratchBlocks(this.props.vm, this.props.intl).inject(codeInjectDiv); // 将dom加入到workspace中\n\n        Blockly.Xml.domToWorkspace(dom, workspace); // console.log('workspace----:',workspace);\n        // console.log('workspaceBlocks:',workspace.getTopBlocks(true));\n        // 将workspace编译成代码\n\n        var language, code;\n\n        if (this.props.language === LanguageCpp) {\n          language = 'Arduino';\n          code = Arduino.workspaceToCode(workspace, true);\n        } else if (this.props.language === LanguageMicropython) {\n          language = 'MicroPython';\n          code = MicroPython.workspaceToCode(workspace, true);\n        } else {\n          language = 'Arduino';\n          code = Arduino.workspaceToCode(workspace, true);\n        } // 删除div\n\n\n        document.body.removeChild(document.getElementById('codeInjectDiv')); // 将代码加入到\n        // const id = new Date().getTime();\n        // document.onblur = null;\n\n        var newCode = {\n          code: code[1],\n          x: this.x || 600,\n          y: this.y || 600,\n          visible: true\n        };\n        this.props.setNewCode(newCode);\n        this.props.setLengthChange(true);\n        this.props.setLengthChange(false); // this.props.setArduinoWriteCode(code[1], true);\n      }\n    }\n  }, {\n    key: \"handleCopyCode\",\n    value: function handleCopyCode(e) {\n      // 复制代码到剪切板\n      e.preventDefault();\n      document.execCommand('Copy');\n    }\n  }, {\n    key: \"handleCutCode\",\n    value: function handleCutCode(e) {\n      // 剪切代码到剪切板\n      e.preventDefault();\n      document.execCommand('Cut');\n    }\n  }, {\n    key: \"handlePasteCode\",\n    value: function handlePasteCode(e) {\n      // 粘贴代码到剪切板\n      e.preventDefault();\n      document.execCommand('Paste');\n    }\n  }, {\n    key: \"handleSelectAllCode\",\n    value: function handleSelectAllCode(e) {\n      e.preventDefault();\n      document.execCommand('SelectAll');\n      this.cRef.editor.selectAll();\n    }\n  }, {\n    key: \"handleRedoCode\",\n    value: function handleRedoCode(e) {\n      e.preventDefault();\n      this.cRef.editor.redo();\n    }\n  }, {\n    key: \"handleUndoCode\",\n    value: function handleUndoCode(e) {\n      e.preventDefault();\n      this.cRef.editor.undo();\n    }\n  }, {\n    key: \"handleChangeTheme\",\n    value: function handleChangeTheme(e) {\n      var newStyle = e.target.value;\n      this.props.setAceCodeStyle(newStyle);\n    }\n  }, {\n    key: \"handleClearCache\",\n    value: function handleClearCache(e) {\n      this.cRef.editor.session.getUndoManager().reset();\n    }\n  }, {\n    key: \"codeRef\",\n    value: function codeRef(ref) {\n      this.cRef = ref;\n    }\n  }, {\n    key: \"handleMaxReset\",\n    value: function handleMaxReset() {\n      var _this2 = this;\n\n      var callback = function callback() {\n        _this2.props.setArduinoWriteCode(maxResetCode, false);\n      };\n\n      dfrobotAlert('提示', '是否删除编辑区代码并加载出厂设置代码', {\n        cover: true,\n        btns: [{\n          text: '是',\n          callBack: callback\n        }, {\n          text: '否'\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          blockCode = _this$props.blockCode,\n          arduinoCodeProps = _this$props.arduinoCodeProps,\n          writeCode = _this$props.writeCode,\n          dispatchSetHoveredCode = _this$props.dispatchSetHoveredCode,\n          vm = _this$props.vm,\n          hoveredCode = _this$props.hoveredCode,\n          setAceCodeStyle = _this$props.setAceCodeStyle,\n          setNewCode = _this$props.setNewCode,\n          setFontNumber = _this$props.setFontNumber,\n          setLengthChange = _this$props.setLengthChange,\n          props = _objectWithoutProperties(_this$props, [\"blockCode\", \"arduinoCodeProps\", \"writeCode\", \"dispatchSetHoveredCode\", \"vm\", \"hoveredCode\", \"setAceCodeStyle\", \"setNewCode\", \"setFontNumber\", \"setLengthChange\"]);\n\n      this.handleChangeCodePrompt(this.props.language);\n      return React.createElement(ArduinoCodeComponent, Object.assign({\n        code: this.props.isWrite ? writeCode : blockCode\n        /* 由于readOnly只识别true和false*/\n        ,\n        codeRef: this.codeRef,\n        onChangeCode: this.handleChangeCode,\n        onChangeCodeStyle: this.handleChangeTheme,\n        onClearCache: this.handleClearCache,\n        onCopyCode: this.handleCopyCode,\n        onCutCode: this.handleCutCode,\n        onMaxReset: this.handleMaxReset,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onPasteCode: this.handlePasteCode,\n        onRedoCode: this.handleRedoCode,\n        onSelectAllCode: this.handleSelectAllCode,\n        onUndoCode: this.handleUndoCode\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ArduinoCode;\n}(React.Component);\n\nArduinoCode.propTypes = {\n  blockCode: PropTypes.string,\n  codeStyle: PropTypes.string,\n  dispatchSetHoveredCode: PropTypes.func,\n  fontNumber: PropTypes.number,\n  height: PropTypes.string,\n  isWrite: PropTypes.bool,\n  language: PropTypes.string,\n  setAceCodeStyle: PropTypes.func,\n  setNewCode: PropTypes.func,\n  theme: PropTypes.string,\n  vm: PropTypes.instanceOf(VM),\n  width: PropTypes.string,\n  writeCode: PropTypes.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    blockCode: state.arduinoTabCode.arduinoBlockCode,\n    codeStyle: state.arduinoAceStyle.codeStyle,\n    isDisable: state.boardAndLanguageState[ExtensionBoardState] === BoardMicrobit,\n    isWrite: state.arduinoCodeIsWrite.isWrite,\n    writeCode: state.arduinoTabCode.arduinoWriteCode,\n    width: regNumber(state.arduinoSize.width) < 20 ? '0px' : (regNumber(state.arduinoSize.width) - 20).toString().concat('px'),\n    height: regNumber(state.arduinoSize.codeHeight) < 20 ? '0px' : (regNumber(state.arduinoSize.codeHeight) - 20).toString().concat('px'),\n    hoveredCode: state.hoveredCode.code,\n    fontNumber: state.arduinoSize.fontNumber,\n    language: state.boardAndLanguageState[ExtensionLanguageState]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchSetHoveredCode: function dispatchSetHoveredCode(isInCode) {\n      dispatch(setHoveredCode(isInCode));\n    },\n    setArduinoWriteCode: function setArduinoWriteCode(code, isAdd) {\n      dispatch(_setArduinoWriteCode(code, isAdd));\n    },\n    setAceCodeStyle: function setAceCodeStyle(style) {\n      dispatch(_setAceCodeStyle(style));\n    },\n    setNewCode: function setNewCode(code) {\n      dispatch(toAddCode(code));\n    },\n    setLengthChange: function setLengthChange(boo) {\n      dispatch(lengthChange(boo));\n    },\n    setFontNumber: function setFontNumber(num) {\n      dispatch(codeAceFontNumber(num));\n    }\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ArduinoCode));","map":{"version":3,"sources":["C:\\Users\\Wang Hao\\Desktop\\react-ace\\src\\arduino-code.jsx"],"names":["bindAll","PropTypes","React","ArduinoCodeComponent","connect","injectIntl","setHoveredCode","ExtensionLanguageState","ExtensionBoardState","BoardMicrobit","LanguageCpp","LanguageMicropython","VM","VMScratchBlocks","Blockly","setArduinoWriteCode","setAceCodeStyle","toAddCode","lengthChange","codeAceFontNumber","regNumber","Arduino","MicroPython","cppPrompt","microPythonPrompt","tools","dfrobotAlert","maxResetCode","ArduinoCode","props","x","y","hoveredCode","oldLanguage","vm","addListener","handleBlockDragEnd","document","addEventListener","handleMouseMove","cRef","editor","completers","splice","removeListener","removeEventListener","e","wheelDelta","ctrlKey","setFontNumber","fontNumber","language","isWrite","console","log","length","addCompleter","num","pageX","pageY","dispatchSetHoveredCode","handleScrollMouse","code","localStorage","setItem","blocks","newBlocksManage","runtime","_getANewBlocks","i","createBlock","topId","getTopLevelScript","id","xml","blockToXML","dom","Xml","textToDom","codeInjectDiv","createElement","setAttribute","style","display","body","appendChild","workspace","intl","inject","domToWorkspace","workspaceToCode","removeChild","getElementById","newCode","visible","setNewCode","setLengthChange","preventDefault","execCommand","selectAll","redo","undo","newStyle","target","value","session","getUndoManager","reset","ref","callback","cover","btns","text","callBack","blockCode","arduinoCodeProps","writeCode","handleChangeCodePrompt","codeRef","handleChangeCode","handleChangeTheme","handleClearCache","handleCopyCode","handleCutCode","handleMaxReset","handleMouseEnter","handleMouseLeave","handlePasteCode","handleRedoCode","handleSelectAllCode","handleUndoCode","Component","propTypes","string","codeStyle","func","number","height","bool","theme","instanceOf","width","mapStateToProps","state","arduinoTabCode","arduinoBlockCode","arduinoAceStyle","isDisable","boardAndLanguageState","arduinoCodeIsWrite","arduinoWriteCode","arduinoSize","toString","concat","codeHeight","mapDispatchToProps","dispatch","isInCode","isAdd","boo"],"mappings":"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","sourcesContent":["import bindAll from 'lodash.bindall';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ArduinoCodeComponent from '../../components/arduino/arduino-code/arduino-code.jsx';\nimport {connect} from 'react-redux';\n\nimport {injectIntl} from 'react-intl';\nimport {setHoveredCode} from \"../../reducers/hoveredCode\";\nimport {ExtensionLanguageState,ExtensionBoardState,BoardMicrobit,LanguageCpp,LanguageMicropython} from \"../../reducers/board-and-language-state\";\nimport VM from 'scratch-vm';\nimport VMScratchBlocks from '../../lib/arduino-blocks.js';\nimport Blockly from 'arduino-blocks';\nimport {setArduinoWriteCode} from \"../../reducers/arduinoTab-code\";\nimport {setAceCodeStyle} from \"../../reducers/arduino-ace-style\";\nimport {toAddCode, lengthChange} from '../../reducers/drag-code';\nimport {codeAceFontNumber} from '../../reducers/arduino-size';\nimport regNumber from '../../lib/regNumber.js';\nimport Arduino from '../../lib/block-generator/Arduino/index';\nimport MicroPython from '../../lib/block-generator/MicroPython/index';\nimport cppPrompt from '../../lib/write-prompt/cpp-code';\nimport microPythonPrompt from '../../lib/write-prompt/micropython-code';\nimport tools from 'brace/ext/language_tools';\nimport dfrobotAlert from '../../lib/custom-dialog/custom-dialog';\nimport maxResetCode from '../../lib/maxResetCode';\n\nclass ArduinoCode extends React.Component{\n    constructor(props){\n        super(props);\n        bindAll(this,[\n            'handleMouseEnter',\n            'handleMouseLeave',\n            'handleBlockDragEnd',\n            'handleChangeCode',\n            'handleCopyCode',\n            'handleCutCode',\n            'handlePasteCode',\n            'handleSelectAllCode',\n            'handleRedoCode',\n            'handleUndoCode',\n            'codeRef',\n            'handleChangeTheme',\n            'handleMouseMove',\n            'handleChangeCodePrompt',\n            'handleClearCache',\n            'handleScrollMouse',\n            'handleMaxReset'\n        ]);\n        this.x = 0;\n        this.y = 0;\n        this.hoveredCode = false;\n        this.oldLanguage = '';\n    }\n    componentDidMount (){\n        this.props.vm.addListener('BLOCK_DRAG_END', this.handleBlockDragEnd);\n        document.addEventListener('mousemove', this.handleMouseMove);\n    }\n    componentWillUnmount (){\n        if(this.cRef.editor.completers){\n            this.cRef.editor.completers.splice(3,1);\n        }\n        this.props.vm.removeListener('BLOCK_DRAG_END', this.handleBlockDragEnd);\n        document.removeEventListener('mousemove', this.handleMouseMove);\n\n    }\n    handleScrollMouse (e){\n        if(e.wheelDelta && e.ctrlKey){//IE/Opera/Chrome\n            if (e.wheelDelta === 120){\n                this.props.setFontNumber(this.props.fontNumber +1);\n            } else if (e.wheelDelta === -120){\n                this.props.setFontNumber(this.props.fontNumber -1);\n            }\n        }\n    }\n    handleChangeCodePrompt (language){\n        if (!this.props.isWrite || this.oldLanguage === language) return;\n        try {\n            if (this.props.language === LanguageMicropython){\n                if (this.cRef && this.cRef.editor.completers){\n                    console.log(this.cRef.editor.completers);\n                    if (this.cRef.editor.completers.length === 3){\n                        tools.addCompleter(microPythonPrompt);\n                    } else {\n                        const num = this.cRef.editor.completers.length - 3;\n                        this.cRef.editor.completers.splice(3, num, microPythonPrompt);\n                    }\n                } else {\n                    tools.addCompleter(microPythonPrompt);\n                }\n            } else {\n                if (this.cRef && this.cRef.editor.completers){\n                    console.log(this.cRef.editor.completers);\n                    if (this.cRef.editor.completers.length === 3){\n                        tools.addCompleter(cppPrompt);\n                    } else {\n                        const num = this.cRef.editor.completers.length - 3;\n                        this.cRef.editor.completers.splice(3, num, cppPrompt);\n                    }\n                } else {\n                    tools.addCompleter(cppPrompt);\n                }\n            }\n            this.oldLanguage = language;\n        } catch (e){\n            console.log(e);\n        }\n    }\n    handleMouseMove (e){\n        //加上preventDefault会导致不能拖动选中文字\n        // e.preventDefault();\n        this.x = e.pageX;\n        // 预料之外的偏差，减去60px,有bug,无法显示在最下面\n        this.y = e.pageY-60;\n    }\n    handleMouseEnter (){\n        this.props.dispatchSetHoveredCode(true);\n        this.hoveredCode = true;\n        document.addEventListener('mousewheel', this.handleScrollMouse, false);\n    }\n    handleMouseLeave (){\n        this.props.dispatchSetHoveredCode(false);\n        this.hoveredCode = false;\n        document.removeEventListener('mousewheel', this.handleScrollMouse);\n    }\n    handleChangeCode (code){\n        this.props.setArduinoWriteCode(code, false);\n        localStorage.setItem('writeCode', code);\n    }\n    handleBlockDragEnd (blocks){\n        // 创建管理blocks的类\n        if (this.props.isWrite){\n            const newBlocksManage = this.props.vm.runtime._getANewBlocks();\n            for (let i = 0; i < blocks.length; i++) {\n                // 将blocks添加到类中\n                newBlocksManage.createBlock(blocks[i]);\n            }\n            // 获取blocks的首项\n            const topId = newBlocksManage.getTopLevelScript(blocks[0].id);\n            // 获取blocks的xml\n            let xml = newBlocksManage.blockToXML(topId);\n            xml = '<xml xmlns=\"http://www.w3.org/1999/xhtml \">' + xml +'</xml>';\n            // xml包装成dom\n            const dom = Blockly.Xml.textToDom(xml);\n            // console.log('dom------:',xml,dom);\n            // 创建div用于放置workspace\n            const codeInjectDiv = document.createElement('div');\n            // console.log('cideUbhectDuv',codeInjectDiv);\n            codeInjectDiv.setAttribute('id','codeInjectDiv');\n            codeInjectDiv.style.display = 'none';\n            document.body.appendChild(codeInjectDiv);\n            const workspace = VMScratchBlocks(this.props.vm, this.props.intl).inject(codeInjectDiv);\n            // 将dom加入到workspace中\n            Blockly.Xml.domToWorkspace(dom, workspace);\n            // console.log('workspace----:',workspace);\n            // console.log('workspaceBlocks:',workspace.getTopBlocks(true));\n            // 将workspace编译成代码\n            let language, code;\n            if (this.props.language === LanguageCpp){\n                language = 'Arduino';\n                code = Arduino.workspaceToCode(workspace, true);\n            } else if (this.props.language === LanguageMicropython){\n                language = 'MicroPython';\n                code = MicroPython.workspaceToCode(workspace, true);\n            } else {\n                language = 'Arduino';\n                code = Arduino.workspaceToCode(workspace, true);\n            }\n            // 删除div\n            document.body.removeChild(document.getElementById('codeInjectDiv'));\n            // 将代码加入到\n            // const id = new Date().getTime();\n            // document.onblur = null;\n            const newCode = {\n                code: code[1],\n                x: this.x || 600,\n                y: this.y || 600,\n                visible: true\n            };\n            this.props.setNewCode(newCode);\n            this.props.setLengthChange(true);\n            this.props.setLengthChange(false);\n            // this.props.setArduinoWriteCode(code[1], true);\n        }\n    }\n    handleCopyCode (e){\n        // 复制代码到剪切板\n        e.preventDefault();\n        document.execCommand('Copy');\n    }\n    handleCutCode (e){\n        // 剪切代码到剪切板\n        e.preventDefault();\n        document.execCommand('Cut');\n    }\n    handlePasteCode (e){\n        // 粘贴代码到剪切板\n        e.preventDefault();\n        document.execCommand('Paste');\n    }\n    handleSelectAllCode (e){\n        e.preventDefault();\n        document.execCommand('SelectAll');\n        this.cRef.editor.selectAll();\n    }\n    handleRedoCode (e){\n        e.preventDefault();\n        this.cRef.editor.redo();\n    }\n    handleUndoCode (e){\n        e.preventDefault();\n        this.cRef.editor.undo();\n    }\n    handleChangeTheme (e){\n        const newStyle = e.target.value;\n        this.props.setAceCodeStyle(newStyle);\n    }\n    handleClearCache (e){\n        this.cRef.editor.session.getUndoManager().reset();\n    }\n    codeRef (ref){\n        this.cRef = ref;\n    }\n    handleMaxReset (){\n        const callback = () =>{\n            this.props.setArduinoWriteCode(maxResetCode, false);\n        }\n        dfrobotAlert('提示', '是否删除编辑区代码并加载出厂设置代码', \n            {cover: true, btns: [{text: '是', callBack: callback}, \n            {text: '否'}]});\n\n    }\n    render (){\n        const {\n            blockCode,\n            arduinoCodeProps,\n            writeCode,\n            dispatchSetHoveredCode,\n            vm,\n            hoveredCode,\n            setAceCodeStyle,\n            setNewCode,\n            setFontNumber,\n            setLengthChange,\n            ...props\n        } = this.props;\n        this.handleChangeCodePrompt(this.props.language);\n        return (\n            <ArduinoCodeComponent\n                code={this.props.isWrite ? writeCode : blockCode}\n                /* 由于readOnly只识别true和false*/\n                codeRef={this.codeRef}\n                onChangeCode={this.handleChangeCode}\n                onChangeCodeStyle={this.handleChangeTheme}\n                onClearCache={this.handleClearCache}\n                onCopyCode={this.handleCopyCode}\n                onCutCode={this.handleCutCode}\n                onMaxReset={this.handleMaxReset}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}\n                onPasteCode={this.handlePasteCode}\n                onRedoCode={this.handleRedoCode}\n                onSelectAllCode={this.handleSelectAllCode}\n                onUndoCode={this.handleUndoCode}\n                {...props}\n            />\n        );\n    }\n}\n\nArduinoCode.propTypes = {\n    blockCode: PropTypes.string,\n    codeStyle: PropTypes.string,\n    dispatchSetHoveredCode: PropTypes.func,\n    fontNumber: PropTypes.number,\n    height: PropTypes.string,\n    isWrite: PropTypes.bool,\n    language: PropTypes.string,\n    setAceCodeStyle: PropTypes.func,\n    setNewCode: PropTypes.func,\n    theme: PropTypes.string,\n    vm: PropTypes.instanceOf(VM),\n    width: PropTypes.string,\n    writeCode: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    blockCode: state.arduinoTabCode.arduinoBlockCode,\n    codeStyle: state.arduinoAceStyle.codeStyle,\n    isDisable: state.boardAndLanguageState[ExtensionBoardState] === BoardMicrobit,\n    isWrite: state.arduinoCodeIsWrite.isWrite,\n    writeCode: state.arduinoTabCode.arduinoWriteCode,\n    width: regNumber(state.arduinoSize.width) < 20 ? '0px' : (regNumber(state.arduinoSize.width) - 20).toString().concat('px'),\n    height:regNumber(state.arduinoSize.codeHeight) < 20 ? '0px' : (regNumber(state.arduinoSize.codeHeight) - 20).toString().concat('px') ,\n    hoveredCode: state.hoveredCode.code,\n    fontNumber: state.arduinoSize.fontNumber,\n    language: state.boardAndLanguageState[ExtensionLanguageState]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSetHoveredCode: isInCode => {\n        dispatch(setHoveredCode(isInCode));\n    },\n    setArduinoWriteCode: (code, isAdd) => {\n        dispatch(setArduinoWriteCode(code, isAdd));\n    },\n    setAceCodeStyle: style => {\n        dispatch(setAceCodeStyle(style));\n    },\n    setNewCode: code => {\n        dispatch(toAddCode(code));\n    },\n    setLengthChange: boo => {\n        dispatch(lengthChange(boo));\n    },\n    setFontNumber: num => {\n        dispatch(codeAceFontNumber(num))\n    }\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ArduinoCode));\n"]},"metadata":{},"sourceType":"module"}