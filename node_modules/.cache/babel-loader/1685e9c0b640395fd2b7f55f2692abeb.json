{"ast":null,"code":"// cpp 提示代码\nvar allCppCode = [{\n  name: 'digitalRead',\n  // 提示的名称，和value保持一致\n  value: 'digitalRead',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Digital I/O' // 代码的分类,描述\n\n}, {\n  name: 'digitalWrite',\n  // 提示的名称，和value保持一致\n  value: 'digitalWrite',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Digital I/O' // 代码的分类,描述\n\n}, {\n  name: 'pinMode',\n  // 提示的名称，和value保持一致\n  value: 'pinMode',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Digital I/O' // 代码的分类,描述\n\n}, {\n  name: 'analogRead',\n  // 提示的名称，和value保持一致\n  value: 'analogRead',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Analog I/O' // 代码的分类,描述\n\n}, {\n  name: 'analogReference',\n  // 提示的名称，和value保持一致\n  value: 'analogReference',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Analog I/O' // 代码的分类,描述\n\n}, {\n  name: 'analogWrite',\n  // 提示的名称，和value保持一致\n  value: 'analogWrite',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Analog I/O' // 代码的分类,描述\n\n}, {\n  name: 'noTone',\n  // 提示的名称，和value保持一致\n  value: 'noTone',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'pulseIn',\n  // 提示的名称，和value保持一致\n  value: 'pulseIn',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'pulseInLong',\n  // 提示的名称，和value保持一致\n  value: 'pulseInLong',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'shiftIn',\n  // 提示的名称，和value保持一致\n  value: 'shiftIn',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'shiftOut',\n  // 提示的名称，和value保持一致\n  value: 'shiftOut',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'tone',\n  // 提示的名称，和value保持一致\n  value: 'tone',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Advanced I/O' // 代码的分类,描述\n\n}, {\n  name: 'delay',\n  // 提示的名称，和value保持一致\n  value: 'delay',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Time' // 代码的分类,描述\n\n}, {\n  name: 'delayMicroseconds',\n  // 提示的名称，和value保持一致\n  value: 'delayMicroseconds',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Time' // 代码的分类,描述\n\n}, {\n  name: 'micros',\n  // 提示的名称，和value保持一致\n  value: 'micros',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Time' // 代码的分类,描述\n\n}, {\n  name: 'millis',\n  // 提示的名称，和value保持一致\n  value: 'millis',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Time' // 代码的分类,描述\n\n}, {\n  name: 'abs',\n  // 提示的名称，和value保持一致\n  value: 'abs',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'constrain',\n  // 提示的名称，和value保持一致\n  value: 'constrain',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'map',\n  // 提示的名称，和value保持一致\n  value: 'map',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'max',\n  // 提示的名称，和value保持一致\n  value: 'max',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'min',\n  // 提示的名称，和value保持一致\n  value: 'min',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'pow',\n  // 提示的名称，和value保持一致\n  value: 'pow',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math ' // 代码的分类,描述\n\n}, {\n  name: 'sq',\n  // 提示的名称，和value保持一致\n  value: 'sq',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'sqrt',\n  // 提示的名称，和value保持一致\n  value: 'sqrt',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Math' // 代码的分类,描述\n\n}, {\n  name: 'cos',\n  // 提示的名称，和value保持一致\n  value: 'cos',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Trigonometry' // 代码的分类,描述\n\n}, {\n  name: 'sin',\n  // 提示的名称，和value保持一致\n  value: 'sin',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Trigonometry' // 代码的分类,描述\n\n}, {\n  name: 'tan',\n  // 提示的名称，和value保持一致\n  value: 'tan',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Trigonometry' // 代码的分类,描述\n\n}, {\n  name: 'isAlpha',\n  // 提示的名称，和value保持一致\n  value: 'isAlpha',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isAlphaNumeric',\n  // 提示的名称，和value保持一致\n  value: 'isAlphaNumeric',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isAscii',\n  // 提示的名称，和value保持一致\n  value: 'isAscii',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isControl',\n  // 提示的名称，和value保持一致\n  value: 'isControl',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isDigit',\n  // 提示的名称，和value保持一致\n  value: 'isDigit',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isGraph',\n  // 提示的名称，和value保持一致\n  value: 'isGraph',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isHexadecimalDigit',\n  // 提示的名称，和value保持一致\n  value: 'isHexadecimalDigit',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isLowerCase',\n  // 提示的名称，和value保持一致\n  value: 'isLowerCase',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isPrintable',\n  // 提示的名称，和value保持一致\n  value: 'isPrintable',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isPunct',\n  // 提示的名称，和value保持一致\n  value: 'isPunct',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isSpace',\n  // 提示的名称，和value保持一致\n  value: 'isSpace',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isUpperCase',\n  // 提示的名称，和value保持一致\n  value: 'isUpperCase',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'isWhitespace',\n  // 提示的名称，和value保持一致\n  value: 'isWhitespace',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Characters' // 代码的分类,描述\n\n}, {\n  name: 'random',\n  // 提示的名称，和value保持一致\n  value: 'random',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Random Numbers' // 代码的分类,描述\n\n}, {\n  name: 'randomSeed',\n  // 提示的名称，和value保持一致\n  value: 'randomSeed',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Random Numbers' // 代码的分类,描述\n\n}, {\n  name: 'bit',\n  // 提示的名称，和value保持一致\n  value: 'bit',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'bitClear',\n  // 提示的名称，和value保持一致\n  value: 'bitClear',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'bitRead',\n  // 提示的名称，和value保持一致\n  value: 'bitRead',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'bitSet',\n  // 提示的名称，和value保持一致\n  value: 'bitSet',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'bitWrite',\n  // 提示的名称，和value保持一致\n  value: 'bitWrite',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'highByte',\n  // 提示的名称，和value保持一致\n  value: 'highByte',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'lowByte',\n  // 提示的名称，和value保持一致\n  value: 'lowByte',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Bits and Bytes' // 代码的分类,描述\n\n}, {\n  name: 'attachInterrupt',\n  // 提示的名称，和value保持一致\n  value: 'attachInterrupt',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'External Interrupts' // 代码的分类,描述\n\n}, {\n  name: 'detachInterrupt',\n  // 提示的名称，和value保持一致\n  value: 'detachInterrupt',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'External Interrupts' // 代码的分类,描述\n\n}, {\n  name: 'interrupts',\n  // 提示的名称，和value保持一致\n  value: 'interrupts',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Interrupts' // 代码的分类,描述\n\n}, {\n  name: 'noInterrupts',\n  // 提示的名称，和value保持一致\n  value: 'noInterrupts',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Interrupts' // 代码的分类,描述\n\n}, {\n  name: 'Serial',\n  // 提示的名称，和value保持一致\n  value: 'Serial',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Communication' // 代码的分类,描述\n\n}, {\n  name: 'stream',\n  // 提示的名称，和value保持一致\n  value: 'stream',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Communication' // 代码的分类,描述\n\n}]; // 一个提示代码需要包含的内\n// const oneCode = {\n//     name: 'a_cpp___value', // 提示的名称，和value保持一致\n//     value: 'a_cpp___value', // 具体的提示代码\n//     score: 100, // 代码的排序\n//     meta: 'a_cpp__prompt' // 代码的分类,描述\n// };\n//allCppCode.push(oneCode);\n\nvar cppCodeCompleter = {\n  getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n    var completions = [];\n    allCppCode.forEach(function (code) {\n      completions.push({\n        caption: code.name,\n        value: code.value,\n        score: code.score,\n        meta: code.meta\n      });\n    });\n    callback(null, completions);\n  }\n};\nexport default cppCodeCompleter;","map":null,"metadata":{},"sourceType":"module"}