{"ast":null,"code":"// {\n//  esp32: [\n//    os: [\n//      listdir\n//    ],\n//    sys: [\n//    ],\n//    spi: [\n//      write: {}\n//    ]\n//    iic: [\n//      wirte: {}\n//    ]\n//  ]\n// }\nvar pythonCode = [{\n  name: 'digitalRead',\n  // 提示的名称，和value保持一致\n  value: 'digitalRead',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Digital I/O' // 代码的分类,描述\n\n}, {\n  name: 'stream',\n  // 提示的名称，和value保持一致\n  value: 'stream',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'Communication' // 代码的分类,描述\n\n}, {\n  name: '__displayhook__',\n  // 提示的名称，和value保持一致\n  value: '__displayhook__',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'function' // 代码的分类,描述\n\n}, {\n  name: '__doc__',\n  // 提示的名称，和value保持一致\n  value: '__doc__',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'function' // 代码的分类,描述\n\n}, {\n  name: '__excepthook__',\n  // 提示的名称，和value保持一致\n  value: '__excepthook__',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'function' // 代码的分类,描述\n\n}, {\n  name: '__loader__',\n  // 提示的名称，和value保持一致\n  value: '__loader__',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'function' // 代码的分类,描述\n\n}, {\n  name: 'esp32',\n  // 提示的名称，和value保持一致\n  value: 'esp32',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'object',\n  // 代码的分类,描述\n  obj: [{\n    // 代码包含的对象\n    name: 'spi',\n    value: 'spi',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(123)',\n      value: 'write(123)',\n      score: 100,\n      meta: 'func'\n    }, {\n      name: 'listen(123)',\n      value: 'listen(123)',\n      score: 100,\n      meta: 'func'\n    }]\n  }, {\n    name: 'iic',\n    value: 'iic',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(456)',\n      value: 'write(456)',\n      score: 100,\n      meta: 'func'\n    }, {\n      name: 'listen(456)',\n      value: 'listen(456)',\n      score: 100,\n      meta: 'func'\n    }]\n  }],\n  func: [{\n    name: 'write(789)',\n    value: 'write',\n    score: 100,\n    meta: 'func'\n  }]\n}, {\n  name: 'write(456)',\n  value: 'write(456)',\n  score: 100,\n  meta: 'func',\n  func: [{\n    name: 'write(789)',\n    value: 'write',\n    score: 100,\n    meta: 'func'\n  }, {\n    name: 'listen(123)',\n    value: 'listen(123)',\n    score: 100,\n    meta: 'func'\n  }]\n}];\nvar pyCodeCompleter = {\n  getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n    var completions = [];\n    pythonCode.forEach(function (code) {\n      completions.push({\n        caption: code.name,\n        value: code.value,\n        score: code.score,\n        meta: code.meta,\n        obj: code.obj || '',\n        func: code.func || ''\n      });\n    }); // console.log(completions[completions.length - 1]);\n\n    callback(null, completions);\n  }\n};\nexport default pyCodeCompleter;","map":null,"metadata":{},"sourceType":"module"}