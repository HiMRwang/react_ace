{"ast":null,"code":"// {\n//  esp32: [\n//    os: [\n//      listdir\n//    ],\n//    sys: [\n//    ],\n//    spi: [\n//      write: {}\n//    ]\n//    iic: [\n//      wirte: {}\n//    ]\n//  ]\n// }\nvar pythonCode = [// {\n//   name: 'digitalRead', // 提示的名称，和value保持一致\n//   value: 'digitalRead', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'Digital I/O', // 代码的分类,描述\n// }, {\n//   name: 'stream', // 提示的名称，和value保持一致\n//   value: 'stream', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'Communication', // 代码的分类,描述\n// }, {\n//   name: '__displayhook__', // 提示的名称，和value保持一致\n//   value: '__displayhook__', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'function', // 代码的分类,描述\n// }, {\n//   name: '__doc__', // 提示的名称，和value保持一致\n//   value: '__doc__', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'function', // 代码的分类,描述\n// }, {\n//   name: '__excepthook__', // 提示的名称，和value保持一致\n//   value: '__excepthook__', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'function', // 代码的分类,描述\n// }, {\n//   name: '__loader__', // 提示的名称，和value保持一致\n//   value: '__loader__', // 具体的提示代码\n//   score: 100, // 代码的排序\n//   meta: 'function', // 代码的分类,描述\n// },\n{\n  name: 'esp32',\n  // 提示的名称，和value保持一致\n  value: 'esp32',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'object',\n  // 代码的分类,描述\n  obj: [{\n    // 代码包含的对象\n    name: 'spi',\n    value: 'spi',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(123)',\n      value: 'write(123)',\n      score: 100,\n      meta: 'function',\n      func: [{\n        name: 'write(456)',\n        value: 'write(456)',\n        score: 100,\n        meta: 'function',\n        func: [{\n          name: 'delete',\n          value: 'delete',\n          score: 100,\n          meta: 'function'\n        }]\n      }, {\n        name: 'listen(哈哈)',\n        value: 'listen(哈哈)',\n        score: 100,\n        meta: 'function'\n      }]\n    }, {\n      name: 'listen(123)',\n      value: 'listen(123)',\n      score: 100,\n      meta: 'function',\n      func: [{\n        name: 'write(错啦)',\n        value: 'write(错啦)',\n        score: 100,\n        meta: 'function'\n      }, {\n        name: 'listen(456)',\n        value: 'listen(456)',\n        score: 100,\n        meta: 'function'\n      }]\n    }]\n  }, {\n    name: 'iic',\n    value: 'iic',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(456)',\n      value: 'write(456)',\n      score: 100,\n      meta: 'function'\n    }, {\n      name: 'listen(456)',\n      value: 'listen(456)',\n      score: 100,\n      meta: 'function'\n    }]\n  }]\n}, {\n  name: 'asd64',\n  // 提示的名称，和value保持一致\n  value: 'asd64',\n  // 具体的提示代码\n  score: 100,\n  // 代码的排序\n  meta: 'object',\n  // 代码的分类,描述\n  obj: [{\n    // 代码包含的对象\n    name: 'spi',\n    value: 'spi',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(asd123)',\n      value: 'write(asd123)',\n      score: 100,\n      meta: 'function',\n      func: [{\n        name: 'write(asd64)',\n        value: 'write(asd64)',\n        score: 100,\n        meta: 'function'\n      }, {\n        name: 'listen(asd64)',\n        value: 'listen(asd64)',\n        score: 100,\n        meta: 'function'\n      }]\n    }, {\n      name: 'listen(asd123)',\n      value: 'listen(asd123)',\n      score: 100,\n      meta: 'function',\n      func: [{\n        name: 'write(asd456)',\n        value: 'write(asd456)',\n        score: 100,\n        meta: 'function'\n      }, {\n        name: 'listen(asd456)',\n        value: 'listen(asd456)',\n        score: 100,\n        meta: 'function'\n      }]\n    }]\n  }, {\n    name: 'iic',\n    value: 'iic',\n    score: 100,\n    meta: 'object',\n    func: [{\n      name: 'write(asdiic456)',\n      value: 'write(asdiic456)',\n      score: 100,\n      meta: 'function'\n    }, {\n      name: 'listen(asdiic456)',\n      value: 'listen(asdiic456)',\n      score: 100,\n      meta: 'function'\n    }]\n  }]\n}];\nvar pyCodeCompleter = {\n  getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n    var completions = [];\n    pythonCode.forEach(function (code) {\n      completions.push({\n        caption: code.name,\n        value: code.value,\n        score: code.score,\n        meta: code.meta,\n        obj: code.obj || '',\n        func: code.func || ''\n      });\n    }); // console.log(completions[completions.length - 1]);\n\n    callback(null, completions);\n  }\n};\nexport default pyCodeCompleter;","map":null,"metadata":{},"sourceType":"module"}